#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "post-commit".



# This script is run straight from the project's git root folder, as the current working directory.
# printf "Running the post-commit hook...\n"


# Get the project's `.git` folder. It will return the absolute path to the `.git` folder, unless
# the current working directory is already the project's git root path or the `.git` folder itself.
GIT_DIR_="$(git rev-parse --git-dir)"

# Get the submodule (if any) or the main's repository root directory.
PROJECT_ROOT_DIRECTORY=$(git rev-parse --show-toplevel)

# Get the `AUTO_VERSIONING_ROOT_FOLDER_NAME`
AUTO_VERSIONING_ROOT_FOLDER_NAME=$(cat $GIT_DIR_/hooks/gitHooksRoot.txt)


# Read the configurations file.
updateVersionScript=$PROJECT_ROOT_DIRECTORY/$AUTO_VERSIONING_ROOT_FOLDER_NAME/__post-git-hook.sh


# Run the version update script.
if sh $updateVersionScript
then
    # printf "The post-commit hook successfully ran '$updateVersionScript'.\n"
    :
else
    printf "Could not run the update program '$updateVersionScript' properly!\n"
    exit 1
fi


# Exits the program using a successful exit status code.
exit 0

